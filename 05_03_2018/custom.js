// Завдання 1 
//Умовні конструкції
/* Написати код, який буде:
########Запитати в користувача його вік:
########Якщо вік більший 7 і менший 17
############Запитати в користувача ім’я
################Якщо ввів:
####################Вивести “Доброго дня, <name>”
################Інакше вивести “До побачення”
########Інакше вивести “Ви народились не в 2000х”
*/

var age = prompt('Ваш возврост');
if (age > 7 && age <= 17) {
	var name = prompt('Як вас звати?');
		if (name != 0) {
			alert('Доброго дня ' + name);
		} else {
			alert('До побачення');
		}
} else {
	alert('Ви народились не в 2000х');
}

/* ******Завдання 2****** */
/***************************
# 	Строка 1: Выведет число 2 так, как 2 = true, а null и undefined = false
			  alert выводит первое логическое значение, которое дает true

#	Строка 2: Сначала выведется внутрений первый alert, потом при первом сравнении
			  между первым внутреним alert и 2, первый внутрений alert после вывода станет undefined
			  undefined || 2, выведет на экран 2 второй внутрений alert(324) не запустится так, 
			  как главный alert выведет первое лог.значение, которое true, а это 2. 
			  Получается до второго || мы не дойдем;
			  
#	Строка 3: Выведет null, оператор "И / &&" возращает первое false, а если все true, то последнее значение;

#	Строка 4: Сначала выведет 1 (внутрений alert(1)), возратит undefined и выведет на экран undefined так,
			  как между undefined && alert(2) первое false уже известно, то до второго внутренего alert дело не дойдет;
			  
#	Строка 5: Выведет на экран 3, alert выводит первое логическое значение, которое дает true
			  2&3 дает 3 - последнее значение true, далее null || 3 - дает 3, первое логическое в alert, 
			  последнему сравнению не дойдем;  
			  
#	Строка 7: Выведет на экран "first", так как if(true). -1 = true, 0 = false. При операторе || берется первое true.
			  
#	Строка 8: Ничего не выведет, так как if(false), оператор "И / &&" возращает первое false
			  
***************************/

/* ******Завдання 3****** */

/***************************
# 	Строка 1: Здесь оператор "+" присоединяет числа 123 и 0 как строку, получится 1230
#	Строка 2: Оператор "-" может применятся только к числам, потому "" = 0 => 0 - 143 + 0 = 143
#	Строка 3: true это 1, false это 0, 1 + 0 будет 1
#	Строка 4: Будет 2, происходит преобразование строки в число.
#	Строка 5: Будет Nan, оператор - будет пытаться привести значение 4pt к числу.
#	Строка 6: будет 213, последнее логическое true, если в условии все лог. true
#	Строка 7: будет 5, первое логическое true
#	Строка 8: будет 123, null при численном преобразовании приводится к 0
#	Строка 9: будет NaN, undefined при численном преобразовании стает NaN
***************************/

/* ******Завдання 4****** */
// Выведется сначала undefined, потом "Ivan". undefined потому что функция от name должна иметь не пустое значение,
// а переменная name находится не в области видимисти функции. 

/* ******Завдання 5****** */
// Функция min яка повертає більше число з a и b
function myFunc(a,b) {
	return a > b ? a : b;
}
var a = prompt("Введите число 1");
var b = prompt("Введите число 2");
alert(myFunc(a, b));

// Рекурсия, возведение числа x в степень n
function pow(x, n) {
  if (n != 1) { 
    return x * pow(x, n - 1);
  } else {
    return x;
  }
}

var x = prompt("Введите число Х ввозводимое в степень N");
var n = prompt("Степень N");

alert(pow(x, n));

// Не рекурсия
/***********************
function pow(x, n) {
  var result = x;

  for (var i = 1; i < n; i++) {
    result *= x;
  }

  return result;
}
************************/